volumes:
  rinha_db_data:

services:
  ##############################
  # Database
  ##############################
  rinha-db:
    ports:
      - "127.0.0.1:28732:5432"
    image: flipbit03/rinha-de-backend-2024-q1-cadu-db:latest
    build:
      context: .
      dockerfile: pg16.1.tuned.Dockerfile
    environment:
      # se você não settar o PGUSER, alem do POSTGRES_USER, o pg_isready (healthcheck) vai encher o seu saquinho
      # psql: FATAL:  role "root" does not exist
      # psql: FATAL:  role "root" does not exist
      # psql: FATAL:  role "root" does not exist
      # ...
      # (ad infinitum)
      # https://stackoverflow.com/a/60194261
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rinha
      POSTGRES_DB: rinha
    logging:
      driver: "none"
    # Bom pra debuggar
    #command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: "pg_isready"
      interval: 3s
    volumes:
      - rinha_db_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: '60MB'

  ##############################
  # Cache Layer
  ##############################
  rinha-cache:
    ports:
      - "127.0.0.1:16379:6379"
    logging:
      driver: "none"
    image: redis:7.2.4
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '200MB'

  ##############################
  # API, com 2 réplicas
  ##############################
  rinha-api:
    logging:
      driver: "none"
    environment:
      RINHA_HTTP_PORT: 8080
      RINHA_DB_USER: postgres
      RINHA_DB_PASSWORD: rinha
      RINHA_DB_HOST: rinha-db
      RINHA_DB_PORT: 5432
      RINHA_DB_NAME: rinha
    depends_on:
      rinha-db:
        condition: service_healthy
    image: flipbit03/rinha-de-backend-2024-q1-cadu-api2:latest
    build:
      context: .
      target: rinha-api
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.3'
          memory: '30MB'
    expose:
      # Você não precisa duplicar a stanza para "api02" com uma âncora Yaml,
      # basta escalar para 2 replicas e usar um port range
      # os serviços serão acessíveis em 8080 e 8081
      - "8080-8081:8080"


  ##############################
  # Balanceador de carga - O famigerado Motor X
  ##############################
  rinha-ingress:
    logging:
      driver: "none"
    image: nginx:latest
    ports:
    - "9999:9999"
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      rinha-api:
          condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '10MB'
